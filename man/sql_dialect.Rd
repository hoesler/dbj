% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql_dialect.R
\docType{data}
\name{sql_dialect}
\alias{create_table_template}
\alias{generic_append_table}
\alias{generic_clear_table}
\alias{generic_create_statement_generator}
\alias{generic_create_table}
\alias{generic_quote_identifier}
\alias{generic_quote_string}
\alias{generic_sql}
\alias{guess_dialect}
\alias{sql_dialect}
\title{Define an SQL dialect}
\format{An object of class \code{sql_dialect} of length 6.}
\usage{
generic_create_statement_generator(table_name, field_names, field_types,
  temporary)


  create_table_template(statement_generator = generic_create_statement_generator)

generic_create_table(con, table, fields, row.names = NA, temporary = FALSE,
  ...)

generic_append_table(con, table, values, row.names = NA, ...)

generic_clear_table(conn, table, use_delete = FALSE)

generic_quote_identifier(conn, x, ...)

generic_quote_string(conn, x, ...)

sql_dialect(name, sql_create_table = generic_create_table,
  sql_append_table = generic_append_table,
  sql_clear_table = generic_clear_table,
  sql_remove_table = generic_remove_table,
  sql_quote_identifier = generic_quote_identifier,
  sql_quote_string = generic_quote_string)

generic_sql

guess_dialect(driver_class)
}
\arguments{
\item{table_name}{The quoted table name}

\item{field_names}{A vector of quoted field names}

\item{field_types}{A vector of the field types}

\item{temporary}{If \code{TRUE}, will generate a temporary table statement.}

\item{statement_generator}{A function which creates an sql create table statement}

\item{table}{The table name}

\item{fields}{Either a character vector or a data frame.}

\item{row.names}{Either \code{TRUE}, \code{FALSE}, \code{NA} or a string.

  If \code{TRUE}, always translate row names to a column called "row_names".
  If \code{FALSE}, never translate row names. If \code{NA}, translate
  rownames only if they're a character vector.

  A string is equivalent to \code{TRUE}, but allows you to override the
  default name.

  For backward compatibility, \code{NULL} is equivalent to \code{FALSE}.}

\item{...}{Other parameters passed on to methods.}

\item{values}{A data.frame}

\item{conn, con}{An object of type \code{\linkS4class{JDBCConnection}}}

\item{use_delete}{If \code{TRUE}, will use DELETE. If \code{FALSE}, TRUNCATE.}

\item{x}{A character vector to label as being escaped SQL.}

\item{name}{The name of the dialect}

\item{sql_create_table}{A function which generates an SQL statement for creating a table}

\item{sql_append_table}{A function which generates an SQL statement for adding data to the table}

\item{sql_clear_table}{A function which generates an SQL statement for truncating a table}

\item{sql_remove_table}{The function called by the \code{dbRemoveTable,JDBCConnection,character-method} method}

\item{sql_quote_identifier}{The function called by the \code{dbQuoteIdentifier,JDBCConnection,character-method} method}

\item{sql_quote_string}{The function called by the \code{dbQuoteString,JDBCConnection,character-method} method}

\item{driver_class}{The full classname of a Java Driver class.}
}
\value{
A new structure with class \code{sql_dialect}.
}
\description{
SQL dialects are used to configure a dbj \code{\link{driver}}

A generator function for a generic CREATE TABLE statment
}
\seealso{
Other SQL dialect functions: \code{\link{dbj-sql-generate}},
  \code{\link{dbj-sql-quote}}
}
\keyword{datasets}

