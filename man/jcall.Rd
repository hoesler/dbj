% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/java_utils.R
\name{jcall}
\alias{jcall}
\title{Same as .jcall but with check = FALSE as default}
\usage{
jcall(obj, returnSig = "V", method, ..., evalArray = TRUE,
  evalString = TRUE, check = FALSE, interface = "RcallMethod",
  simplify = FALSE, use.true.class = FALSE)
}
\arguments{
\item{obj}{Java object (\code{jobjRef} as returned by
    \code{\link{.jcall}} or \code{\link{.jnew}}) or fully qualified
    class name in JNI notation (e.g. \code{"java/lang/String"}).}

\item{returnSig}{Return signature in JNI notation (e.g. "V" for void,
    "[I" for \code{int[]} etc.). For convenience additional type
    \code{"S"} is supported and expanded to
    \code{"Ljava/lang/String;"}, re-mapping \code{"T"} to represent the
    type \code{short}.}

\item{method}{The name of the method to be called}

\item{...}{
    Any parametes that will be passed to the Java method. The parameter
    types are determined automatically and/or taken from the
    \code{jobjRef} object. All named parameters are discarded.}

\item{evalArray}{This flag determines whether the array return value
    is evaluated (\code{TRUE}) or passed back as Java object reference
    (\code{FALSE}).}

\item{evalString}{This flag determines whether string result is returned
    as characters or as Java object reference.}

\item{check}{If set to \code{TRUE} then checks for exceptions are
    performed before and after the call using
    \code{\link{.jcheck}(silent=FALSE)}. This is usually the desired
    behavior, because all calls fail until an expection is cleared.}

\item{interface}{This option is experimental and specifies the
    interface used for calling the Java method; the current
    implementation supports two interfaces:
    \itemize{
      \item{\code{"RcallMethod"}}{the default interface.}
      \item{\code{"RcallSyncMethod"}}{synchronized call of a
	method. This has simmilar effect as using \code{synchronize} in
	Java.}
    }
  }

\item{simplify}{If \code{evalArray} is \code{TRUE} then this argument
    is passed to \code{\link{.jevalArray}()}.}

\item{use.true.class}{logical. If set to \code{TRUE}, the true class
  of the returned object will be used instead of the declared signature. 
  \code{TRUE} allows for example to grab the actual class of an object when 
  the return type is an interface, or allows to grab an array when the 
  declared type is Object and the returned object is an array. Use \code{FALSE} 
  for efficiency when you are sure about the return type. }
}
\description{
Same as .jcall but with check = FALSE as default
}
\keyword{internal}

