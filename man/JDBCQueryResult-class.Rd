% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JDBCQueryResult.R
\docType{class}
\name{JDBCQueryResult-class}
\alias{JDBCQueryResult}
\alias{JDBCQueryResult-class}
\alias{dbClearResult,JDBCQueryResult-method}
\alias{dbColumnInfo,JDBCQueryResult-method}
\alias{dbFetch,JDBCQueryResult,numeric-method}
\alias{dbGetDriver,JDBCQueryResult-method}
\alias{dbGetInfo,JDBCQueryResult-method}
\alias{dbGetRowCount,JDBCQueryResult-method}
\alias{dbGetRowsAffected,JDBCQueryResult-method}
\alias{dbGetStatement,JDBCQueryResult-method}
\alias{dbHasCompleted,JDBCQueryResult-method}
\alias{dbIsValid,JDBCQueryResult-method}
\title{JDBCQueryResult class}
\usage{
\S4method{dbFetch}{JDBCQueryResult,numeric}(res, n = -1, fetch_size = 0,
  ..., row.names = NA)

\S4method{dbClearResult}{JDBCQueryResult}(res, ...)

\S4method{dbColumnInfo}{JDBCQueryResult}(res, what = c("name", "field.type",
  "data.type", "jdbc.type"), ...)

\S4method{dbGetRowCount}{JDBCQueryResult}(res, ...)

\S4method{dbGetRowsAffected}{JDBCQueryResult}(res, ...)

\S4method{dbHasCompleted}{JDBCQueryResult}(res, ...)

\S4method{dbGetInfo}{JDBCQueryResult}(dbObj, ...)

\S4method{dbIsValid}{JDBCQueryResult}(dbObj, ...)

\S4method{dbGetDriver}{JDBCQueryResult}(dbObj, ...)

\S4method{dbGetStatement}{JDBCQueryResult}(res, ...)

\S4method{dbGetRowsAffected}{JDBCQueryResult}(res, ...)
}
\arguments{
\item{res, dbObj}{an \code{\linkS4class{JDBCQueryResult}} object.}

\item{n}{optional maximum number of records to retrieve per fetch. Use \code{-1} to 
retrieve all pending records; use \code{0} for to fetch the default 
number of rows as defined in \code{\link{JDBC}}}

\item{fetch_size}{a hint to the number of rows that should be fetched from the database in a single block.
See \url{http://docs.oracle.com/javase/7/docs/api/java/sql/Statement.html#setFetchSize(int)}.}

\item{...}{Ignored. Needed for compatibility with generic.}

\item{row.names}{Either \code{TRUE}, \code{FALSE}, \code{NA} or a string.

  If \code{TRUE}, always translate row names to a column called "row_names".
  If \code{FALSE}, never translate row names. If \code{NA}, translate
  rownames only if they're a character vector.

  A string is equivalent to \code{TRUE}, but allows you to override the
  default name.

  For backward compatibility, \code{NULL} is equivalent to \code{FALSE}.}

\item{what}{a character vector indicating which info to return.
Expected is a subset of \code{c("name", "field.type", "data.type", "label", "nullable")}.}
}
\description{
JDBCQueryResult class
}
\section{Methods}{

\code{dbFetch}: Fetch n results


\code{dbColumnInfo}: Get info about the result set data types.
  Returns a data.frame with one row per output field in \code{res}.
  Includes \code{name}, \code{field.type} (the SQL type)
  and \code{data.type} (the R data type) columns for the default what.
  Additionally, \code{label} (The field label)
  and \code{nullable} (0 = disallows NULL, 1 = allows NULL, 2 = unknown) can be fetched.


\code{dbGetRowCount}: Count rows in result set


\code{dbGetRowsAffected}: This function returns the number of rows
that were added, deleted, or updated by data modifying query.
For a selection query, this function returns 0.


\code{dbHasCompleted}: Check if all results have been fetched


\code{dbGetInfo}: Get info


\code{dbIsValid}: Is the result valid


\code{dbGetStatement}: Returns the statement that was passed to dbSendQuery


\code{dbGetRowsAffected}: Returns 0
}
\seealso{
Other result classes: \code{\link{JDBCResult-class}},
  \code{\link{JDBCUpdateResult-class}}
}

